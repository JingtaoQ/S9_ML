// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('test2', function() {

  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('test2', async function() {
    // Test name: test2
    // Step # | name | target | value
    // 1 | open | http://localhost:3000/ | 
    await driver.get("http://localhost:3000/")
    // 2 | setWindowSize | 1420x855 | 
    await driver.manage().window().setRect({ width: 1420, height: 855 })
    // 3 | click | css=.form-control | 
    await driver.findElement(By.css(".form-control")).click()
    // 4 | type | css=.form-control | test for ML
    await driver.findElement(By.css(".form-control")).sendKeys("test for ML")
    // 5 | click | css=.btn-outline-secondary | 
    await driver.findElement(By.css(".btn-outline-secondary")).click()
    // 6 | mouseOver | css=.btn-outline-secondary | 
    {
      const element = await driver.findElement(By.css(".btn-outline-secondary"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 7 | mouseOut | css=.btn-outline-secondary | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 8 | click | linkText=Add | 
    await driver.findElement(By.linkText("Add")).click()
    // 9 | click | id=title | 
    await driver.findElement(By.id("title")).click()
    // 10 | type | id=title | test for ML
    await driver.findElement(By.id("title")).sendKeys("test for ML")
    // 11 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 12 | type | id=description | test01
    await driver.findElement(By.id("description")).sendKeys("test01")
    // 13 | click | css=.btn | 
    await driver.findElement(By.css(".btn")).click()
    // 14 | click | linkText=Tasks | 
    await driver.findElement(By.linkText("Tasks")).click()
    // 15 | click | css=.form-control | 
    await driver.findElement(By.css(".form-control")).click()
    // 16 | type | css=.form-control | test for
    await driver.findElement(By.css(".form-control")).sendKeys("test for")
    // 17 | click | css=.btn-outline-secondary | 
    await driver.findElement(By.css(".btn-outline-secondary")).click()
    // 18 | mouseOver | css=.btn-outline-secondary | 
    {
      const element = await driver.findElement(By.css(".btn-outline-secondary"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 19 | mouseOut | css=.btn-outline-secondary | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
  })
})
